#!/usr/bin/env node

'use strict';

const colors = require('colors');
const fs = require('fs');

let HTTPUP = require('../lib/http-up');
let argv = require('minimist')(process.argv.slice(2));

let config = require('../lib/config');


argv.port = argv.port || argv.p || config.defaultPort;
argv.fold = 'public';
if (argv._[0]) {
    argv.fold = argv._[0];
}



if (!fs.existsSync(argv.fold)) {
    console.log('Public folder "' + colors.yellow(argv.fold) + '" is absent.');
    console.log('Create folder and send name of folder as first argument, as these '+ colors.yellow('npm start foldername1'));
    process.exit();
}

if (!fs.existsSync( config.destination )) {
    fs.mkdirSync( config.destination );
}


process.title = 'http-up';

if (argv.h || argv.help) {
    console.log([
        'usage: http-up [path] [options]',
        '',
        'options:',
        `  -p --port    Port to use. [${config.defaultPort}]`
    ].join('\n'));
    process.exit();
}

HTTPUP.makeServer(argv);

if (process.platform === 'win32') {
    require('readline')
        .createInterface({
            input: process.stdin,
            output: process.stdout,
        })
        .on('SIGINT', function () {
            process.emit('SIGINT');
        });
}

process.on('SIGINT', function () {
    console.log('http-up stopped.');
    process.exit();
});

process.on('SIGTERM', function () {
    console.log('http-up stopped.');
    process.exit();
});
